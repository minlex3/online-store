spring.application.name=online-store

spring.r2dbc.url=r2dbc:h2:mem:///testdb;MODE=PostgreSQL;DB_CLOSE_DELAY=-1;DB_CLOSE_ON_EXIT=FALSE
spring.r2dbc.username=sa
spring.r2dbc.password=password

spring.liquibase.change-log=classpath:/db/changelog/db.changelog-master.xml
spring.liquibase.enabled=true

spring.liquibase.url=jdbc:h2:mem:testdb;MODE=PostgreSQL;DB_CLOSE_DELAY=-1;DB_CLOSE_ON_EXIT=FALSE
spring.liquibase.user=sa
spring.liquibase.password=password

spring.cache.type=redis
spring.data.redis.host=${SPRING_REDIS_HOST:localhost}
spring.data.redis.port=6379

spring.cache.redis.time-to-live=60000
spring.cache.redis.cache-null-values=false

payment-module.url=http://localhost:8081

spring.security.oauth2.client.provider.keycloak.authorization-uri=http://localhost:8180/realms/master/protocol/openid-connect/auth
spring.security.oauth2.client.provider.keycloak.token-uri=http://localhost:8180/realms/master/protocol/openid-connect/token
spring.security.oauth2.client.provider.keycloak.user-info-uri=http://localhost:8180/realms/master/protocol/openid-connect/userinfo
spring.security.oauth2.client.provider.keycloak.user-name-attribute=sub
spring.security.oauth2.client.provider.keycloak.jwk-set-uri=http://localhost:8180/realms/master/protocol/openid-connect/certs

spring.security.oauth2.client.registration.keycloak.authorizationGrantType=authorization_code
spring.security.oauth2.client.registration.keycloak.provider=keycloak
spring.security.oauth2.client.registration.keycloak.client-id=online-store
spring.security.oauth2.client.registration.keycloak.client-secret=TSbPhi22i2KcjHFV9zsEC7m5WmfPL2JI
spring.security.oauth2.client.registration.keycloak.redirect-uri={baseUrl}/{action}/oauth2/code/{registrationId}
spring.security.oauth2.client.registration.keycloak.scope=openid, profile, email

spring.security.oauth2.client.provider.keycloak2.issuer-uri=http://localhost:8180/realms/master

spring.security.oauth2.client.registration.yandex.provider=keycloak2
spring.security.oauth2.client.registration.yandex.authorizationGrantType=client_credentials
spring.security.oauth2.client.registration.yandex.client-id=online-store
spring.security.oauth2.client.registration.yandex.client-secret=TSbPhi22i2KcjHFV9zsEC7m5WmfPL2JI
spring.security.oauth2.client.registration.yandex.scope=profile
spring.security.oauth2.client.registration.yandex.clientAuthenticationMethod=client_secret_post
